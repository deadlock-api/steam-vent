// This file is generated by rust-protobuf 3.5.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `steammessages_remoteclient_service.steamclient.proto`
// Generated for lite runtime

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::steam_vent_proto_common::protobuf::VERSION_3_7_2;


const _VENT_PROTO_VERSION_CHECK: () = ::steam_vent_proto_common::VERSION_0_5_0;

#[allow(unused_imports)]
use crate::steammessages_base::*;
#[allow(unused_imports)]
use crate::steammessages_unified_base_steamclient::*;
#[allow(unused_imports)]
use crate::steammessages_remoteclient_service_messages::*;
///
struct RemoteClient {}
impl ::steam_vent_proto_common::RpcService for RemoteClient {
    const SERVICE_NAME: &'static str = "RemoteClient";
}
///
struct RemoteClientSteamClient {}
impl ::steam_vent_proto_common::RpcService for RemoteClientSteamClient {
    const SERVICE_NAME: &'static str = "RemoteClientSteamClient";
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_AllocateRelayServer_Request {
    const METHOD_NAME: &'static str = "RemoteClient.AllocateRelayServer#1";
    type Response = CRemoteClient_AllocateRelayServer_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_AllocateSDR_Request {
    const METHOD_NAME: &'static str = "RemoteClient.AllocateSDR#1";
    type Response = CRemoteClient_AllocateSDR_Response;
}
impl ::steam_vent_proto_common::RpcMethod
for CRemoteClient_CreateRemotePlayTogetherInvitation_Request {
    const METHOD_NAME: &'static str = "RemoteClient.CreateRemotePlayTogetherInvitation#1";
    type Response = CRemoteClient_CreateRemotePlayTogetherInvitation_Response;
}
impl ::steam_vent_proto_common::RpcMethod
for CRemoteClient_DeleteRemotePlayTogetherInvitation_Request {
    const METHOD_NAME: &'static str = "RemoteClient.DeleteRemotePlayTogetherInvitation#1";
    type Response = CRemoteClient_DeleteRemotePlayTogetherInvitation_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_GetPairingInfo_Request {
    const METHOD_NAME: &'static str = "RemoteClient.GetPairingInfo#1";
    type Response = CRemoteClient_GetPairingInfo_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_GetRecentClients_Request {
    const METHOD_NAME: &'static str = "RemoteClient.GetRecentClients#1";
    type Response = CRemoteClient_GetRecentClients_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_MarkTaskComplete_Request {
    const METHOD_NAME: &'static str = "RemoteClient.MarkTaskComplete#1";
    type Response = CRemoteClient_MarkTaskComplete_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_Online_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.NotifyOnline#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod
for CRemoteClient_RegisterStatusUpdate_Notification {
    const METHOD_NAME: &'static str = "RemoteClientSteamClient.NotifyRegisterStatusUpdate#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_RemotePacket_Notification {
    const METHOD_NAME: &'static str = "RemoteClientSteamClient.NotifyRemotePacket#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_ReplyPacket_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.NotifyReplyPacket#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_SteamBroadcast_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.SendSteamBroadcastPacket#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_SteamToSteam_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.SendSteamToSteamPacket#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemoteClient_TaskList_Notification {
    const METHOD_NAME: &'static str = "RemoteClientSteamClient.NotifyTaskList#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod
for CRemoteClient_UnregisterStatusUpdate_Notification {
    const METHOD_NAME: &'static str = "RemoteClientSteamClient.NotifyUnregisterStatusUpdate#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemotePlayTogether_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.SendRemotePlayTogetherPacket#1";
    type Response = ();
}
impl ::steam_vent_proto_common::RpcMethod for CRemotePlay_SessionStarted_Request {
    const METHOD_NAME: &'static str = "RemoteClient.SendRemotePlaySessionStarted#1";
    type Response = CRemotePlay_SessionStarted_Response;
}
impl ::steam_vent_proto_common::RpcMethod for CRemotePlay_SessionStopped_Notification {
    const METHOD_NAME: &'static str = "RemoteClient.SendRemotePlaySessionStopped#1";
    type Response = ();
}
